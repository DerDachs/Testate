/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Stammdatenverwaltung;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import JDialog.InfoDialog;
import JDialog.produktAnlegenDialog;
import JDialog.produktEditierenDialog;
import JDialog.zutatEditierenDialog;
import static Stammdatenverwaltung.ProduktController.produktliste;
import static Stammdatenverwaltung.ZutatenController.zutatenliste;
import com.sun.rowset.internal.Row;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author dachs
 */
public class MainFrame extends javax.swing.JFrame implements ActionListener, ItemListener {

    // Variable Declaration
    public static DefaultTableModel produktModel = new DefaultTableModel();
    public Produkt produktAuswahl = null;
    public static DefaultTableModel zutatenModel = new DefaultTableModel();
    public Zutat zutatenAuswahl = null;
    public DefaultTableModel rezeptModel = new DefaultTableModel();
    public Rezept rezeptAuswahl = null;
    public ProduktController produktVerwaltung;
    public Stammdatenverwaltung verwaltung;
    public static final int MAXPRODUKTE = 1000;
    public static final int MAXZUTATEN = 1000;

    /**
     * Creates new form StammdatenverwaltungUI
     */
    public MainFrame(Stammdatenverwaltung stammdatenverwaltung) {
        verwaltung = stammdatenverwaltung;
        initComponents();
        fensterZentrieren(this);

        String[] columsProdukt = {"Produktnummer", "Produktbezeichnung", "Preis", "Klasse"};
        produktModel.setColumnIdentifiers(columsProdukt);

        String[] columsZutat = {"Zutatennummer", "Zutatenbezeichnung", "Preis", "Klasse"};
        zutatenModel.setColumnIdentifiers(columsZutat);

        String[] columsRezept = {"Rezeptnummer", "Rezeptbezeichnung"};
        rezeptModel.setColumnIdentifiers(columsRezept);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parentPanel = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        produktPanel = new javax.swing.JPanel();
        newProduktButton = new javax.swing.JButton();
        editProduktButton = new javax.swing.JButton();
        listProduktButton = new javax.swing.JButton();
        deleteProduktButton = new javax.swing.JButton();
        produktScrollPane = new javax.swing.JScrollPane();
        produktTable = new javax.swing.JTable();
        produktListLabel = new javax.swing.JLabel();
        zutatenPanel = new javax.swing.JPanel();
        newZutatButton = new javax.swing.JButton();
        editZutatButton = new javax.swing.JButton();
        listZutatButton = new javax.swing.JButton();
        deleteZutatButton = new javax.swing.JButton();
        zutatScrollPane = new javax.swing.JScrollPane();
        zutatTable = new javax.swing.JTable();
        zutatenListLabel = new javax.swing.JLabel();
        rezeptPanel = new javax.swing.JPanel();
        newRezeptButton = new javax.swing.JButton();
        editRezeptButton = new javax.swing.JButton();
        listRezeptButton = new javax.swing.JButton();
        deleteRezeptButton = new javax.swing.JButton();
        rezeptListPane = new javax.swing.JScrollPane();
        rezeptTable = new javax.swing.JTable();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        mainMenu = new javax.swing.JMenuItem();
        newMenu = new javax.swing.JMenu();
        newRezeptMenu = new javax.swing.JMenuItem();
        newProduktMenu = new javax.swing.JMenuItem();
        newZutatMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        produktMenu = new javax.swing.JMenuItem();
        zutatenMenu = new javax.swing.JMenuItem();
        rezeptMenu = new javax.swing.JMenuItem();
        extrasMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenuItem();
        infoMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        parentPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setText("Stammdatenverwaltung");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("Hauptmen√º");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jLabel1))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(385, 385, 385)
                        .addComponent(jLabel2)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addContainerGap(814, Short.MAX_VALUE))
        );

        parentPanel.add(mainPanel, "card2");

        produktPanel.setMinimumSize(new java.awt.Dimension(1000, 1000));

        newProduktButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/add.png"))); // NOI18N
        newProduktButton.setText("New");
        newProduktButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProduktButtonActionPerformed(evt);
            }
        });

        editProduktButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/pencil.png"))); // NOI18N
        editProduktButton.setText("Edit");
        editProduktButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProduktButtonActionPerformed(evt);
            }
        });

        listProduktButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/list.png"))); // NOI18N
        listProduktButton.setText("List");
        listProduktButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProduktButtonActionPerformed(evt);
            }
        });

        deleteProduktButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/rubbish-bin.png"))); // NOI18N
        deleteProduktButton.setText("Delete");
        deleteProduktButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProduktButtonActionPerformed(evt);
            }
        });

        produktTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        produktScrollPane.setViewportView(produktTable);

        javax.swing.GroupLayout produktPanelLayout = new javax.swing.GroupLayout(produktPanel);
        produktPanel.setLayout(produktPanelLayout);
        produktPanelLayout.setHorizontalGroup(
            produktPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(produktPanelLayout.createSequentialGroup()
                .addGroup(produktPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(produktPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(produktPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteProduktButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(listProduktButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editProduktButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newProduktButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(produktScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(produktPanelLayout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(produktListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(380, Short.MAX_VALUE))
        );
        produktPanelLayout.setVerticalGroup(
            produktPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(produktPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(produktPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(produktPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(newProduktButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editProduktButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listProduktButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteProduktButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(produktScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(produktListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(693, Short.MAX_VALUE))
        );

        parentPanel.add(produktPanel, "card3");

        newZutatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/add.png"))); // NOI18N
        newZutatButton.setText("New");
        newZutatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newZutatButtonActionPerformed(evt);
            }
        });

        editZutatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/pencil.png"))); // NOI18N
        editZutatButton.setText("Edit");
        editZutatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editZutatButtonActionPerformed(evt);
            }
        });

        listZutatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/list.png"))); // NOI18N
        listZutatButton.setText("List");
        listZutatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listZutatButtonActionPerformed(evt);
            }
        });

        deleteZutatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/rubbish-bin.png"))); // NOI18N
        deleteZutatButton.setText("Delete");
        deleteZutatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteZutatButtonActionPerformed(evt);
            }
        });

        zutatTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        zutatScrollPane.setViewportView(zutatTable);

        javax.swing.GroupLayout zutatenPanelLayout = new javax.swing.GroupLayout(zutatenPanel);
        zutatenPanel.setLayout(zutatenPanelLayout);
        zutatenPanelLayout.setHorizontalGroup(
            zutatenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(zutatenPanelLayout.createSequentialGroup()
                .addGroup(zutatenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(zutatenPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(zutatenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteZutatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(listZutatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editZutatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newZutatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(zutatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(zutatenPanelLayout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(zutatenListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(380, Short.MAX_VALUE))
        );
        zutatenPanelLayout.setVerticalGroup(
            zutatenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(zutatenPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(zutatenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(zutatenPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(newZutatButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editZutatButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listZutatButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteZutatButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(zutatScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zutatenListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(698, Short.MAX_VALUE))
        );

        parentPanel.add(zutatenPanel, "card4");

        newRezeptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/add.png"))); // NOI18N
        newRezeptButton.setText("New");

        editRezeptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/pencil.png"))); // NOI18N
        editRezeptButton.setText("Edit");

        listRezeptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/list.png"))); // NOI18N
        listRezeptButton.setText("List");

        deleteRezeptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Stammdatenverwaltung/rubbish-bin.png"))); // NOI18N
        deleteRezeptButton.setText("Delete");

        rezeptTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        rezeptListPane.setViewportView(rezeptTable);

        javax.swing.GroupLayout rezeptPanelLayout = new javax.swing.GroupLayout(rezeptPanel);
        rezeptPanel.setLayout(rezeptPanelLayout);
        rezeptPanelLayout.setHorizontalGroup(
            rezeptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rezeptPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rezeptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteRezeptButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listRezeptButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editRezeptButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newRezeptButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addComponent(rezeptListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(376, Short.MAX_VALUE))
        );
        rezeptPanelLayout.setVerticalGroup(
            rezeptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rezeptPanelLayout.createSequentialGroup()
                .addGroup(rezeptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rezeptPanelLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(newRezeptButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editRezeptButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listRezeptButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteRezeptButton))
                    .addGroup(rezeptPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(rezeptListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(719, Short.MAX_VALUE))
        );

        parentPanel.add(rezeptPanel, "card5");

        getContentPane().add(parentPanel, java.awt.BorderLayout.CENTER);

        fileMenu.setMnemonic('m');
        fileMenu.setText("File");
        fileMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N

        mainMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        mainMenu.setText("Main");
        mainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuActionPerformed(evt);
            }
        });
        fileMenu.add(mainMenu);

        newMenu.setMnemonic('n');
        newMenu.setText("New...");
        newMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        newMenu.setHideActionText(true);

        newRezeptMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        newRezeptMenu.setText("Rezept");
        newRezeptMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRezeptMenuActionPerformed(evt);
            }
        });
        newMenu.add(newRezeptMenu);

        newProduktMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        newProduktMenu.setText("Produkt");
        newProduktMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProduktMenuActionPerformed(evt);
            }
        });
        newMenu.add(newProduktMenu);

        newZutatMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        newZutatMenu.setText("Zutat");
        newZutatMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newZutatMenuActionPerformed(evt);
            }
        });
        newMenu.add(newZutatMenu);

        fileMenu.add(newMenu);

        exitMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        exitMenu.setMnemonic('x');
        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenu);

        mainMenuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");
        editMenu.setToolTipText("");
        editMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N

        produktMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        produktMenu.setMnemonic('p');
        produktMenu.setText("Produkte");
        produktMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                produktMenuActionPerformed(evt);
            }
        });
        editMenu.add(produktMenu);

        zutatenMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        zutatenMenu.setMnemonic('z');
        zutatenMenu.setText("Zutaten");
        zutatenMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zutatenMenuActionPerformed(evt);
            }
        });
        editMenu.add(zutatenMenu);

        rezeptMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        rezeptMenu.setMnemonic('r');
        rezeptMenu.setText("Rezepte");
        rezeptMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rezeptMenuActionPerformed(evt);
            }
        });
        editMenu.add(rezeptMenu);

        mainMenuBar.add(editMenu);

        extrasMenu.setMnemonic('e');
        extrasMenu.setText("Extras");
        extrasMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N

        helpMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");
        helpMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuActionPerformed(evt);
            }
        });
        extrasMenu.add(helpMenu);

        infoMenu.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        infoMenu.setMnemonic('i');
        infoMenu.setText("Info");
        infoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoMenuActionPerformed(evt);
            }
        });
        extrasMenu.add(infoMenu);

        mainMenuBar.add(extrasMenu);

        setJMenuBar(mainMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void produktMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_produktMenuActionPerformed
        parentPanel.removeAll();
        parentPanel.add(produktPanel);
        parentPanel.repaint();
        parentPanel.revalidate();

        produktListeAktualisieren();

    }//GEN-LAST:event_produktMenuActionPerformed

    private void zutatenMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zutatenMenuActionPerformed
        parentPanel.removeAll();
        parentPanel.add(zutatenPanel);
        parentPanel.repaint();
        parentPanel.revalidate();

        zutatenListeAktualisieren();
    }//GEN-LAST:event_zutatenMenuActionPerformed

    private void rezeptMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rezeptMenuActionPerformed
        parentPanel.removeAll();
        parentPanel.add(rezeptPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_rezeptMenuActionPerformed

    private void mainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuActionPerformed
        parentPanel.removeAll();
        parentPanel.add(mainPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
    }//GEN-LAST:event_mainMenuActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        if (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(this, "Wollen Sie das Programm wirklich beenden?", "Programm beenden", JOptionPane.YES_NO_OPTION)) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMenuActionPerformed

    private void infoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoMenuActionPerformed
        new InfoDialog(this, true);
    }//GEN-LAST:event_infoMenuActionPerformed

    private void newProduktButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProduktButtonActionPerformed
        //Es darf Maximal 1000 Produkte geben
        if (ProduktController.produktliste.size() >= MAXPRODUKTE) {

            //new maxProdukteDialog();
        } else {

            new JDialog.produktAnlegenDialog(this, true);
        }
    }//GEN-LAST:event_newProduktButtonActionPerformed

    private void editProduktButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProduktButtonActionPerformed
        int column = 0;
        int row = 0;
        try {
            row = produktTable.getSelectedRow();
            String value = produktTable.getValueAt(row, column).toString();
            int inhalt = Integer.parseInt(value);
            new produktEditierenDialog(this, true, inhalt);

        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(parentPanel, "Bitte selektieren Sie ein Produkt", "WARNING!", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_editProduktButtonActionPerformed

    private void newZutatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newZutatButtonActionPerformed
        if (zutatenliste.size() >= MAXZUTATEN) {
            //new maxProdukteDialog();
        } else {
            new JDialog.zutatAnlegenDialog(this, true);
        }
    }//GEN-LAST:event_newZutatButtonActionPerformed

    private void newProduktMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProduktMenuActionPerformed
        //Es darf Maximal 1000 Produkte geben
        if (produktliste.size() >= MAXPRODUKTE) {

            //new maxProdukteDialog();
        } else {

            new JDialog.produktAnlegenDialog(this, true);
        }
    }//GEN-LAST:event_newProduktMenuActionPerformed

    private void newZutatMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newZutatMenuActionPerformed
        if (zutatenliste.size() >= MAXZUTATEN) {
            //new maxProdukteDialog();
        } else {
            new JDialog.zutatAnlegenDialog(this, true);
        }
    }//GEN-LAST:event_newZutatMenuActionPerformed

    private void helpMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuActionPerformed
        JOptionPane.showMessageDialog(parentPanel, "F√ºr diese Programm gibt es keine Hilfe! Sie sind auf sich allein gestellt", "Hilfe", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_helpMenuActionPerformed

    private void newRezeptMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newRezeptMenuActionPerformed
        JOptionPane.showMessageDialog(parentPanel, "Noch nicht implementiert!", "Info", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_newRezeptMenuActionPerformed

    private void listProduktButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProduktButtonActionPerformed
        JOptionPane.showMessageDialog(parentPanel, "Noch nicht implementiert!", "Info", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_listProduktButtonActionPerformed

    private void deleteProduktButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProduktButtonActionPerformed
        int column = 0;
        int row = 0;
        boolean gefunden = false;
        String ausgabe;
        Produkt p = null;
        try {
            row = produktTable.getSelectedRow();
            String value = produktTable.getValueAt(row, column).toString();
            int inhalt = Integer.parseInt(value);
            for (Produkt o : produktliste) {

                if (o.getpNr() == inhalt) {
                    gefunden = true;
                    p = o;
                    break;
                }
            }

        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(parentPanel, "Bitte selektieren Sie ein Produkt", "WARNING!", JOptionPane.OK_OPTION);
        }
        if (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(parentPanel, "Wollen Sie das ausgew√§hlte Produkt wirklich l√∂schen?", "Produkt l√∂schen?", JOptionPane.YES_NO_OPTION)) {
            ausgabe = ProduktController.produktLoeschen(p);
            produktListeAktualisieren();
            produktListLabel.setText(ausgabe);
        }
    }//GEN-LAST:event_deleteProduktButtonActionPerformed

    private void editZutatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editZutatButtonActionPerformed
        int column = 0;
        int row = 0;
        try {
            row = zutatTable.getSelectedRow();
            String value = zutatTable.getValueAt(row, column).toString();
            int inhalt = Integer.parseInt(value);
            new zutatEditierenDialog(this, true, inhalt);

        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(parentPanel, "Bitte selektieren Sie ein Produkt", "WARNING!", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_editZutatButtonActionPerformed

    private void listZutatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listZutatButtonActionPerformed
        JOptionPane.showMessageDialog(parentPanel, "Noch nicht implementiert!", "Info", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_listZutatButtonActionPerformed

    private void deleteZutatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteZutatButtonActionPerformed
        int column = 0;
        int row;
        boolean gefunden = false;
        String ausgabe;
        Zutat z = null;
        try {
            row = zutatTable.getSelectedRow();
            String value = zutatTable.getValueAt(row, column).toString();
            int inhalt = Integer.parseInt(value);
            for (Zutat o : zutatenliste) {

                if (o.getzNr() == inhalt) {
                    gefunden = true;
                    z = o;
                    break;
                }
            }

        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(parentPanel, "Bitte selektieren Sie eine Zutat", "WARNING!", JOptionPane.OK_OPTION);
        }
        if (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(parentPanel, "Wollen Sie die ausgew√§hlte Zutat wirklich l√∂schen?", "Zutat l√∂schen?", JOptionPane.YES_NO_OPTION)) {
            ausgabe = ZutatenController.zutatLoeschen(z);
            zutatenListeAktualisieren();
            zutatenListLabel.setText(ausgabe);
        }
    }//GEN-LAST:event_deleteZutatButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteProduktButton;
    private javax.swing.JButton deleteRezeptButton;
    private javax.swing.JButton deleteZutatButton;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton editProduktButton;
    private javax.swing.JButton editRezeptButton;
    private javax.swing.JButton editZutatButton;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu extrasMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem helpMenu;
    private javax.swing.JMenuItem infoMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton listProduktButton;
    private javax.swing.JButton listRezeptButton;
    private javax.swing.JButton listZutatButton;
    private javax.swing.JMenuItem mainMenu;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenu newMenu;
    private javax.swing.JButton newProduktButton;
    private javax.swing.JMenuItem newProduktMenu;
    private javax.swing.JButton newRezeptButton;
    private javax.swing.JMenuItem newRezeptMenu;
    private javax.swing.JButton newZutatButton;
    private javax.swing.JMenuItem newZutatMenu;
    private javax.swing.JPanel parentPanel;
    private static javax.swing.JLabel produktListLabel;
    private javax.swing.JMenuItem produktMenu;
    private javax.swing.JPanel produktPanel;
    private javax.swing.JScrollPane produktScrollPane;
    private static javax.swing.JTable produktTable;
    private javax.swing.JScrollPane rezeptListPane;
    private javax.swing.JMenuItem rezeptMenu;
    private javax.swing.JPanel rezeptPanel;
    private javax.swing.JTable rezeptTable;
    private javax.swing.JScrollPane zutatScrollPane;
    private static javax.swing.JTable zutatTable;
    public static javax.swing.JLabel zutatenListLabel;
    private javax.swing.JMenuItem zutatenMenu;
    private javax.swing.JPanel zutatenPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public static void fensterZentrieren(MainFrame mainFr) {

        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();

        int x = dimension.width;
        int y = dimension.height;

        int fensterX = (x - mainFr.getWidth()) / 2;
        int fensterY = (y - mainFr.getHeight()) / 2;

        mainFr.setLocation(fensterX, fensterY);
    }

    public static String produktListeAktualisieren() {
        produktModel.setRowCount(0);
        for (Produkt p : ProduktController.produktliste) {
            //Alle Produkte in die Anzeigenliste einf√ºgen
            Object[] row = {p.getpNr(), p.getBezeichnung(), p.getPreis(), p.getKlasse()};
            produktModel.addRow(row);
        }
        produktTable.setModel(produktModel);
        produktListLabel.setText("Produktliste aktualisiert");

        return "";
    }

    public static String zutatenListeAktualisieren() {
        zutatenModel.setRowCount(0);
        for (Zutat p : ZutatenController.zutatenliste) {
            //Alle Zutaten in die Anzeigenliste einf√ºgen
            Object[] row = {p.getzNr(), p.getBezeichnung(), p.getPreis(), p.getKlasse()};
            zutatenModel.addRow(row);
        }
        zutatTable.setModel(zutatenModel);
        zutatenListLabel.setText("Zutatenliste aktualisiert");

        return "";
    }

//    public static void produktSpeichern() {
//        Workbook wb = new XSSFWorkbook();
//        Sheet sheet = wb.createSheet();
//        Row row = sheet.createRow(0);
//        TableModel model = produktTable.getModel();
//        for (int i = 0; i < model.getColumnCount(); i++) {
//            row.createCell(i).setCellValue(model.getColumnName(i));
//        }
//        for (int i = 0; i < model.getRowCount(); i++) {
//            row = sheet.createRow(i + 1);
//            for (int j = 0; j < model.getColumnCount(); j++) {
//                row.createCell(j).setCellValue(
//                        model.getValueAt(i, j).toString()
//                );
//            }
//        }
//        FileOutputStream fileOut = new FileOutputStream("H:\\Hasil.xlsx");
//        wb.write(fileOut);
//        fileOut.close();
//    }
}
